openapi: 3.0.0
info:
  title: STUD API
  description: Software Engineering Course STAD application
  contact:
    name: STAD Corp
    email: stadsupport@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/IASONAS2001/STAD/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://7fe4cb38-ad4e-4260-a616-2eb859735bc3.mock.pstmn.io
- url: http://127.0.0.1:1880/
paths:
  /admin/class:
    post:
      summary: create a class
      description: the secretary must be able to create a class
      operationId: createClass
      requestBody:
        $ref: '#/components/requestBodies/Class'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/class/{className}:
    get:
      summary: get class info
      description: FR1 Ο καθηγητής και η γραμματεία πρέπει να μπορεί να επεξεργαστεί
        την τάξη
      operationId: getClassInfoAdmin
      parameters:
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    put:
      summary: change class info
      operationId: putClassInfoAdmin
      parameters:
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Class'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
    delete:
      summary: delete class
      operationId: deleteClass
      parameters:
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/class/{className}:
    get:
      summary: get class info
      description: FR1 Ο καθηγητής και η γραμματεία πρέπει να μπορεί να επεξεργαστεί
        την τάξη
      operationId: getClassInfoUser
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    put:
      summary: change class info
      operationId: put Class Info user
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Class'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/class/{className}/chat:
    get:
      summary: get the chat of the classroom
      description: F2- Ο χρήστης θα πρέπει να έχει τη δυνατότητα να συνομιλήσει με
        τα υπόλοιπα μέλη της ‘τάξης’
      operationId: getClassChat
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    post:
      summary: post a message to the classroom
      operationId: postClassMessage
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/NewMessage'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}:
    get:
      summary: get the user details
      description: FR-3 Ο χρήστης θα μπορεί να φτιάξει το προφίλ του
      operationId: getUserInfo
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    put:
      summary: edit the user details
      operationId: editUserInfo
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/class/{className}/grade:
    get:
      summary: get the grade of the user
      description: F4- Το σύστημα θα πρέπει να μπορεί να υπολογίσει τον μέσο όρο του
        μαθητή
      operationId: getUserGrade
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/notifications:
    get:
      summary: get the notifications of the user
      description: F5- Το σύστημα θα πρέπει να ειδοποιεί τον χρήστη για νέες ειδοποιήσεις
      operationId: getUserNotifications
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/notifications/{notificationId}:
    get:
      summary: get a notification of the user using its id
      description: F5- Το σύστημα θα πρέπει να ειδοποιεί τον χρήστη για νέες ειδοποιήσεις
      operationId: getUserNotificationById
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationId
        in: path
        description: the name id of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/notifications:
    get:
      summary: get all the notifications
      description: F5- Το σύστημα θα πρέπει να ειδοποιεί τον χρήστη για νέες ειδοποιήσεις
      operationId: getAdminNotifications
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    post:
      summary: post a notification
      operationId: postNotification
      requestBody:
        $ref: '#/components/requestBodies/NewNotification'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/notifications/{notificationId}:
    get:
      summary: get a certain notification
      description: F5- Το σύστημα θα πρέπει να ειδοποιεί τον χρήστη για νέες ειδοποιήσεις
      operationId: getAdminNotificationById
      parameters:
      - name: notificationId
        in: path
        description: the name id of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        "400":
          description: bad request
      x-swagger-router-controller: Default
    put:
      summary: edit a certain notification
      description: F5- Το σύστημα θα πρέπει να ειδοποιεί τον χρήστη για νέες ειδοποιήσεις
      operationId: editAdminNotificationById
      parameters:
      - name: notificationId
        in: path
        description: the name id of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        $ref: '#/components/requestBodies/NewNotification'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
    delete:
      summary: delete a certain notification
      operationId: deleteAdminNotificationById
      parameters:
      - name: notificationId
        in: path
        description: the name id of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/class/{className}/user/{userName}/grade:
    post:
      summary: upload student grades in tests
      operationId: uploadUserGrade
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Grade'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/class/{className}/user/{userName}/tests:
    post:
      summary: upload student tests
      description: allows the admin to upload student tests
      operationId: adminClassClassNameUserUserNameTestsPOST
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/Test'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /class/{className}/user/{userName}/notes:
    post:
      summary: upload notes
      description: the teacher wants to upload notes
      operationId: classClassNameUserUserNameNotesPOST
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/NoteUpload'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /class/{className}/user/{userName}/exercises:
    post:
      summary: upload exercises
      description: the teacher wants to upload exercises
      operationId: classClassNameUserUserNameExercisesPOST
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ExerciseSolution'
      responses:
        "200":
          description: successful upload
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/user/{userName}/role:
    put:
      summary: edit the role of the user
      description: the admin must be able to edit the roles of the users
      operationId: editUserRole
      parameters:
      - name: userName
        in: path
        description: the name id of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        $ref: '#/components/requestBodies/Role'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/class/{className}/schedule:
    put:
      summary: update the schedule
      description: the admin must be able to edit the schedule
      operationId: updateSchedule
      parameters:
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ScheduleItem'
      responses:
        "200":
          description: successful upload
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /class/{className}/user/{userName}/exercises/{exerciseId}/grade:
    post:
      summary: upload exercises grade
      description: the teacher wants to upload exercises' grade
      operationId: gradeExercise
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: className
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: exerciseId
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ExerciseGrade'
      responses:
        "200":
          description: successful upload
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/{userName}/subject/{subjectName}/file:
    post:
      summary: upload exercises solution
      description: the student wants to upload exercises' solutions
      operationId: ExerciseSolution
      parameters:
      - name: userName
        in: path
        description: the name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subjectName
        in: path
        description: the name of the class
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ExerciseSolution'
      responses:
        "200":
          description: successful upload
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /user/login:
    put:
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/user:
    post:
      summary: Create a new user account
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
  /admin/user/{userName}:
    delete:
      summary: delete a user
      operationId: deleteUser
      parameters:
      - name: userName
        in: path
        description: The user name for deletetion
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful deletetion
        "400":
          description: bad request
      x-swagger-router-controller: Default
components:
  schemas:
    Role:
      type: object
      properties:
        roleName:
          type: string
        permissions:
          type: object
    ExerciseSolutionUpload:
      type: object
      properties:
        subjectName:
          type: string
        exerciseId:
          type: integer
        solutionFile:
          type: string
          format: binary
    ExerciseGradeUpload:
      type: object
      properties:
        className:
          type: string
        exerciseId:
          type: integer
        grade:
          type: number
    ScheduleItemUpload:
      type: object
      properties:
        className:
          type: string
        shceduleItem:
          $ref: '#/components/schemas/ScheduleItemUpload_shceduleItem'
    Class:
      type: object
      properties:
        className:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/EnrolledUser'
      example:
        className: className
        users:
        - grade: 6.02745618307040320615897144307382404804229736328125
          user:
            surname: surname
            name: name
            id: 0
            userName: userName
            email: email
        - grade: 6.02745618307040320615897144307382404804229736328125
          user:
            surname: surname
            name: name
            id: 0
            userName: userName
            email: email
    EnrolledUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        grade:
          type: number
      example:
        grade: 6.02745618307040320615897144307382404804229736328125
        user:
          surname: surname
          name: name
          id: 0
          userName: userName
          email: email
    User:
      type: object
      properties:
        userName:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        id:
          type: integer
          format: int64
      example:
        surname: surname
        name: name
        id: 0
        userName: userName
        email: email
    Chat:
      type: array
      items:
        $ref: '#/components/schemas/Message'
    Message:
      allOf:
      - $ref: '#/components/schemas/NewMessage'
      - type: object
        properties:
          id:
            type: integer
            format: int64
    NewMessage:
      type: object
      properties:
        username:
          type: string
        message:
          type: string
    Grade:
      type: object
      properties:
        username:
          type: string
        className:
          type: string
        grade:
          type: number
      example:
        grade: 0.80082819046101150206595775671303272247314453125
        className: className
        username: username
    Notifications:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    NewNotification:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    Notification:
      allOf:
      - $ref: '#/components/schemas/NewNotification'
      - type: object
        properties:
          id:
            type: integer
            format: int64
    TestUpload:
      type: object
      properties:
        title:
          type: string
        file:
          type: string
          format: binary
    Test:
      allOf:
      - $ref: '#/components/schemas/TestUpload'
      - type: object
        properties:
          id:
            type: integer
            format: int64
    NoteUpload:
      type: object
      properties:
        title:
          type: string
        file:
          type: string
          format: binary
    ScheduleItemUpload_shceduleItem:
      type: object
      properties:
        title:
          type: string
        time:
          type: integer
  requestBodies:
    Role:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Role'
    ExerciseSolution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExerciseSolutionUpload'
    ExerciseGrade:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExerciseGradeUpload'
    ScheduleItem:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleItemUpload'
    Test:
      description: Test file
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Test'
      required: true
    Class:
      description: Class model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Class'
      required: true
    NewMessage:
      description: message model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewMessage'
      required: true
    User:
      description: message model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true
    NewNotification:
      description: notification model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewNotification'
      required: true
    Grade:
      description: notification model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Grade'
      required: true
    TestUpload:
      description: test model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TestUpload'
      required: true
    NoteUpload:
      description: note model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoteUpload'
      required: true
